---
description:
globs:
alwaysApply: true
---
# Cursor Rules 开发规范索引

本目录包含了完整的项目开发规范和流程指导，旨在确保代码质量、开发效率和系统安全性。

## 📚 规范文档

### 1. [项目结构规范](mdc:project-structure.mdc)
- 总体架构说明
- 核心技术栈介绍
- 目录结构详解
- 设计原则和最佳实践

### 2. [编码规范](mdc:coding-standards.mdc)
- TypeScript 编码标准
- 命名约定和代码组织
- API 服务开发规范
- 组件开发最佳实践
- 样式和数据库操作规范

### 3. [开发流程规范](mdc:development-workflow.mdc)
- Git 工作流和分支策略
- 提交规范和代码审查
- 开发环境配置指南
- 功能开发完整流程
- 问题排查和文档维护

### 4. [测试规范](mdc:testing-guidelines.mdc)
- 测试策略和金字塔
- 单元测试、集成测试、E2E测试
- Mock 数据和服务配置
- 测试执行和 CI/CD 集成
- 测试最佳实践

### 5. [安全开发规范](mdc:security-guidelines.mdc)
- 身份验证与授权机制
- 输入验证与数据安全
- 文件和数据库安全
- 网络安全配置
- 错误处理和依赖安全

## 🚀 快速开始

### 新成员入门
1. 阅读 [项目结构规范](mdc:project-structure.mdc) 了解项目架构
2. 学习 [编码规范](mdc:coding-standards.mdc) 掌握代码标准
3. 按照 [开发流程规范](mdc:development-workflow.mdc) 配置开发环境
4. 参考 [测试规范](mdc:testing-guidelines.mdc) 编写测试用例
5. 遵循 [安全开发规范](mdc:security-guidelines.mdc) 确保代码安全

### 开发环境设置
```bash
# 1. 克隆项目
git clone <repository-url>
cd nextjs-cms-template

# 2. 安装依赖
pnpm install

# 3. 配置环境变量
cp .env.example .env.local

# 4. 初始化数据库
npx prisma generate
npx prisma db push
npx prisma db seed

# 5. 启动开发服务器
pnpm dev
```

## 🏗️ 项目架构概览

```
nextjs-cms-template/
├── src/
│   ├── app/                    # Next.js App Router 页面
│   │   ├── api/               # API 路由
│   │   ├── dashboard/         # 仪表板页面
│   │   ├── files/             # 文件管理
│   │   ├── login/             # 登录页面
│   │   └── system/            # 系统管理
│   ├── components/            # React 组件
│   ├── services/              # API 服务层
│   ├── lib/                   # 工具和配置
│   ├── types/                 # TypeScript 类型
│   ├── locales/               # 国际化文件
│   └── utils/                 # 工具函数
├── prisma/                    # 数据库 Schema
├── docs/                      # API 文档
└── .cursor/rules/             # 开发规范文档
```

## 🔧 核心功能模块

- **身份验证系统**: JWT 令牌认证，角色权限控制
- **文件管理**: 阿里云 OSS 集成，安全文件上传
- **系统管理**: 用户管理、角色管理、权限配置
- **国际化支持**: 中英文双语界面
- **响应式设计**: 基于 Ant Design 的现代 UI

## 📋 开发检查清单

### 新功能开发
- [ ] 阅读相关规范文档
- [ ] 设计数据库表结构
- [ ] 实现 API 接口和服务层
- [ ] 开发前端组件和页面
- [ ] 添加国际化支持
- [ ] 编写单元测试和集成测试
- [ ] 进行安全性检查
- [ ] 更新文档和 API 接口

### 代码提交前
- [ ] 运行 `pnpm type-check` 检查类型错误
- [ ] 运行 `pnpm lint` 检查代码规范
- [ ] 运行 `pnpm test` 执行测试用例
- [ ] 运行 `pnpm build` 验证构建成功
- [ ] 编写清晰的提交信息
- [ ] 创建 Pull Request 并邀请代码审查

### 部署前检查
- [ ] 所有测试通过
- [ ] 安全扫描无高危漏洞
- [ ] 性能测试满足要求
- [ ] 数据库迁移脚本准备
- [ ] 环境变量配置正确
- [ ] 备份计划已制定

## 📞 支持和反馈

如果您在使用这些规范时遇到问题或有改进建议，请：

1. 查阅相关规范文档
2. 搜索项目文档和 Issue
3. 联系项目维护者
4. 提交改进建议或 Pull Request

## 📝 文档更新

这些规范文档应该随着项目的发展而持续更新。当您发现规范过时或需要补充时，请及时更新相关文档，确保团队始终遵循最新的最佳实践。

---

**最后更新时间**: 2024年12月24日
**文档版本**: 1.0.0
**适用项目**: Next.js CMS Template
